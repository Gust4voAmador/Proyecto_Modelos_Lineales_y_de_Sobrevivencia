horizontal = TRUE)
boxplot(data_raw$`WBC Count`,
main = "Boxplot de la WBC Count",
ylab = "WBC Count",
col = "lightgreen",
horizontal = TRUE)
boxplot(data_raw$`Platelet Count`,
main = "Boxplot de la Platelet Count",
ylab = "Platelet Count",
col = "lightgreen",
horizontal = TRUE)
boxplot(data_raw$PDW,
main = "Boxplot de la PDW",
ylab = "PDW",
col = "lightgreen",
horizontal = TRUE)
#table(data_raw$Sex)
barplot(table(data_raw$Sex), col = "lightgreen", main = "Distribución del nivel educativo")
barplot(table(data_raw$`Differential Count`),
col = "lightblue",
main = "Distribución de Differential Count",
ylab = "Frecuencia")
barplot(table(data_raw$`RBC PANEL`),
col = "lightcoral",
main = "Distribución de RBC PANEL",
ylab = "Frecuencia")
barplot(table(data_raw$`Final Output`),
col = "lightgoldenrod",
main = "Distribución de Final Output",
ylab = "Frecuencia")
# Gráfico de dispersión entre variables continuas
plot(data_raw$Age, data_raw$Haemoglobin,
main = "Edad vs Haemoglobina",
xlab = "Edad", ylab = "Haemoglobina",
col = "steelblue", pch = 16)
plot(data_raw$`WBC Count`, data_raw$`Platelet Count`,
main = "WBC Count vs Platelet Count",
xlab = "WBC Count", ylab = "Platelet Count",
col = "tomato", pch = 16)
#plot(data_raw$PDW, data_raw$`Platelet Count`,
#     main = "WBC Count vs Platelet Count",
#     xlab = "WBC Count", ylab = "Platelet Count",
#     col = "purple", pch = 16)
# Correlaciones
#cor(data_raw$Age, data_raw$Haemoglobin, use = "complete.obs")
#cor(data_raw$`WBC Count`, data_raw$`Platelet Count`, use = "complete.obs")
# Boxplot de Haemoglobina según sexo
boxplot(Haemoglobin ~ Sex, data = data_raw,
main = "Haemoglobina según Sexo",
col = c("skyblue", "salmon"),
ylab = "Haemoglobina")
# Boxplot de WBC Count según resultado final
boxplot(`WBC Count` ~ `Final Output`, data = data_raw,
main = "WBC Count según Final Output",
col = c("lightgreen", "gold"),
ylab = "WBC Count")
# Boxplot de PDW según Differential Count
boxplot(PDW ~ `Differential Count`, data = data_raw,
main = "PDW según Differential Count",
col = c("pink", "lightblue"),
ylab = "PDW")
# Tabla de contingencia
tabla_dc_final <- table(data_raw$`Differential Count`, data_raw$`Final Output`)
print(tabla_dc_final)
# Barras agrupadas
barplot(tabla_dc_final,
beside = TRUE,
col = c("lightblue", "lightpink"),
legend = TRUE,
main = "Final Output según Differential Count",
ylab = "Frecuencia")
# Otra tabla: Sex vs Final Output
tabla_sex_final <- table(data_raw$Sex, data_raw$`Final Output`)
barplot(tabla_sex_final,
beside = TRUE,
col = c("lightcyan", "lightcoral"),
legend = TRUE,
main = "Final Output según Sexo")
library(corrplot)
numeric_vars <- data_raw[, c("Age", "Haemoglobin", "WBC Count", "Platelet Count", "PDW")]
# Matriz de correlación
cor_matrix <- cor(numeric_vars, use = "complete.obs")
# Gráfico
corrplot(cor_matrix, method = "color", type = "upper",
tl.col = "black", tl.srt = 45,
addCoef.col = "black", # muestra los coeficientes
col = colorRampPalette(c("red", "white", "blue"))(200))
library(ggplot2)
library(tidyr)
library(dplyr)
# Seleccionar solo variables binarias conocidas
binarias <- data_clean %>%
select(`Differential Count`, `RBC PANEL`, `Dengue Diagnosis`) %>%
pivot_longer(cols = everything(), names_to = "Variable", values_to = "Valor") %>%
filter(Valor %in% c(0, 1)) %>%  # excluir NA para este histograma
mutate(Valor = factor(Valor, levels = c(0, 1)))
# Graficar
ggplot(binarias, aes(x = Variable, fill = Valor)) +
geom_bar(position = "dodge") +
geom_text(stat = "count", aes(label = ..count..),
position = position_dodge(width = 0.9), vjust = -0.3, size = 3.5) +
scale_fill_manual(values = c("0" = "gray70", "1" = "steelblue")) +
labs(
x = "Variable binaria",
y = "Cantidad de observaciones",
fill = "Valor",
title = "Distribución de observaciones por valor (0 y 1)"
) +
theme_minimal()
library(ggplot2)
library(dplyr)
# Preparar los datos
data_plot <- data_clean %>%
filter(!is.na(`Dengue Diagnosis`)) %>%
mutate(
`Differential Count` = factor(`Differential Count`, levels = c(0, 1)),
`Dengue Diagnosis` = ifelse(`Dengue Diagnosis` == 1, "Positive", "Negative")
)
# Gráfico
ggplot(data_plot, aes(x = `Differential Count`, fill = `Differential Count`)) +
geom_bar() +
facet_wrap(~`Dengue Diagnosis`) +
labs(
title = "Distribución de Differential Count según diagnóstico de dengue",
x = "Differential Count",
y = "Frecuencia"
) +
scale_fill_manual(values = c("0" = "gray70", "1" = "steelblue")) +
theme_minimal()
# Preparar los datos
data_plot <- data_clean %>%
filter(!is.na(`Dengue Diagnosis`)) %>%
mutate(
`Differential Count` = factor(`Differential Count`, levels = c(0, 1)),
`Dengue Diagnosis` = ifelse(`Dengue Diagnosis` == 1, "Positive", "Negative")
)
# Gráfico
ggplot(data_plot, aes(x = `Differential Count`, fill = `Differential Count`)) +
geom_bar() +
facet_wrap(~`Dengue Diagnosis`) +
labs(
title = "Distribución de Differential Count según diagnóstico de dengue",
x = "Differential Count",
y = "Frecuencia"
) +
scale_fill_manual(values = c("0" = "gray70", "1" = "steelblue")) +
theme_minimal()
library(ggplot2)
library(dplyr)
# Preparar los datos
data_plot <- data_clean %>%
filter(!is.na(`RBC PANEL`)) %>%
mutate(
`RBC PANEL` = factor(`RBC PANEL`, levels = c(0, 1)),
`Dengue Diagnosis` = ifelse(`Dengue Diagnosis` == 1, "Positive", "Negative")
)
# Gráfico
ggplot(data_plot, aes(x = `RBC PANEL`, fill = `RBC PANEL`)) +
geom_bar() +
facet_wrap(~`Dengue Diagnosis`) +
labs(
title = "Distribución de RBC PANEL según diagnóstico de dengue",
x = "RBC PANEL",
y = "Frecuencia"
) +
scale_fill_manual(values = c("0" = "gray70", "1" = "steelblue")) +
theme_minimal()
# Preparar los datos
data_plot <- data_clean %>%
filter(!is.na(`Dengue Diagnosis`)) %>%
mutate(
`Differential Count` = factor(`Differential Count`, levels = c(0, 1)),
`Dengue Diagnosis` = ifelse(`Dengue Diagnosis` == 1, "Positive", "Negative")
)
# Gráfico
ggplot(data_plot, aes(x = `Differential Count`, fill = `Differential Count`)) +
geom_bar() +
facet_wrap(~`Dengue Diagnosis`) +
labs(
title = "Distribución de Differential Count según diagnóstico de dengue",
x = "Differential Count",
y = "Frecuencia"
) +
scale_fill_manual(values = c("0" = "gray70", "1" = "steelblue")) +
theme_minimal()
library(ggplot2)
library(dplyr)
# Preparar los datos
data_plot <- data_clean %>%
filter(!is.na(`RBC PANEL`)) %>%
mutate(
`RBC PANEL` = factor(`RBC PANEL`, levels = c(0, 1)),
`Dengue Diagnosis` = ifelse(`Dengue Diagnosis` == 1, "Positive", "Negative")
)
# Gráfico
ggplot(data_plot, aes(x = `RBC PANEL`, fill = `RBC PANEL`)) +
geom_bar() +
facet_wrap(~`Dengue Diagnosis`) +
labs(
title = "Distribución de RBC PANEL según diagnóstico de dengue",
x = "RBC PANEL",
y = "Frecuencia"
) +
scale_fill_manual(values = c("0" = "gray70", "1" = "steelblue")) +
theme_minimal()
library(ggplot2)
library(dplyr)
data_clean$`Dengue Diagnosis`
# Reemplazar NA por etiqueta explícita
data_plot <- data_clean %>%
mutate(`Dengue Diagnosis` = case_when(
is.na(`Dengue Diagnosis`) ~ "NA",
`Dengue Diagnosis` == 1 ~ "1",
`Dengue Diagnosis` == 0 ~ "0"
)) %>%
group_by(`Dengue Diagnosis`) %>%
summarise(Frecuencia = n()) %>%
mutate(Proporcion = Frecuencia / sum(Frecuencia))
# Gráfico
ggplot(data_plot, aes(x = `Dengue Diagnosis`, y = Proporcion, fill = `Dengue Diagnosis`)) +
geom_col() +
geom_text(aes(label = paste0(Frecuencia, " obs")), vjust = -0.5) +
scale_y_continuous(labels = scales::percent_format(), limits = c(0, 1.1)) +
labs(
x = "Valor de Dengue Diagnosis",
y = "Proporción del total",
title = "Distribución de Dengue Diagnosis",
fill = "Valor"
) +
scale_fill_manual(values = c("0" = "gray70", "1" = "steelblue", "NA" = "darkred")) +
theme_minimal()
library(ggplot2)
library(dplyr)
data_clean$`Dengue Diagnosis`
# Reemplazar NA por etiqueta explícita
data_plot <- data_clean %>%
mutate(`Dengue Diagnosis` = case_when(
is.na(`Dengue Diagnosis`) ~ "NA",
`Dengue Diagnosis` == 1 ~ "1",
`Dengue Diagnosis` == 0 ~ "0"
)) %>%
group_by(`Dengue Diagnosis`) %>%
summarise(Frecuencia = n()) %>%
mutate(Proporcion = Frecuencia / sum(Frecuencia))
# Gráfico
ggplot(data_plot, aes(x = `Dengue Diagnosis`, y = Proporcion, fill = `Dengue Diagnosis`)) +
geom_col() +
geom_text(aes(label = paste0(Frecuencia, " obs")), vjust = -0.5) +
scale_y_continuous(labels = scales::percent_format(), limits = c(0, 1.1)) +
labs(
x = "Valor de Dengue Diagnosis",
y = "Proporción del total",
title = "Distribución de Dengue Diagnosis",
fill = "Valor"
) +
scale_fill_manual(values = c("0" = "gray70", "1" = "steelblue", "NA" = "darkred")) +
theme_minimal()
# Preparar los datos
data_plot <- data_clean %>%
filter(!is.na(`Dengue Diagnosis`)) %>%
mutate(
`Differential Count` = factor(`Differential Count`, levels = c(0, 1)),
`Dengue Diagnosis` = ifelse(`Dengue Diagnosis` == 1, "Positive", "Negative")
)
# Gráfico
ggplot(data_plot, aes(x = `Differential Count`, fill = `Differential Count`)) +
geom_bar() +
facet_wrap(~`Dengue Diagnosis`) +
labs(
title = "Distribución de Differential Count según diagnóstico de dengue",
x = "Differential Count",
y = "Frecuencia"
) +
scale_fill_manual(values = c("0" = "gray70", "1" = "steelblue")) +
theme_minimal()
library(ggplot2)
library(dplyr)
# Preparar los datos
data_plot <- data_clean %>%
filter(!is.na(`RBC PANEL`)) %>%
mutate(
`RBC PANEL` = factor(`RBC PANEL`, levels = c(0, 1)),
`Dengue Diagnosis` = ifelse(`Dengue Diagnosis` == 1, "Positive", "Negative")
)
# Gráfico
ggplot(data_plot, aes(x = `RBC PANEL`, fill = `RBC PANEL`)) +
geom_bar() +
facet_wrap(~`Dengue Diagnosis`) +
labs(
title = "Distribución de RBC PANEL según diagnóstico de dengue",
x = "RBC PANEL",
y = "Frecuencia"
) +
scale_fill_manual(values = c("0" = "gray70", "1" = "steelblue")) +
theme_minimal()
library(readr)
library(dplyr)
library(ggplot2)
data_raw <- read_csv("Dengue diseases dataset.csv", show_col_types = FALSE)
# Filtrar solo las variables numéricas
datos_numericos <- data_clean %>%
select(where(is.numeric)) %>%
na.omit()  # eliminar NA para evitar errores en cor()
# Calcular matriz de correlación
cor_matrix <- cor(datos_numericos)
# Visualizar la matriz con ggcorrplot
ggcorrplot(cor_matrix,
method = "square",
type = "lower",
lab = TRUE,
lab_size = 2.5,
colors = c("#6D9EC1", "white", "#E46726"),
title = "Matriz de correlación entre variables",
ggtheme = ggplot2::theme_minimal())
data_clean$`Dengue Diagnosis`
# Reemplazar NA por etiqueta explícita
data_plot <- data_clean %>%
mutate(`Dengue Diagnosis` = case_when(
is.na(`Dengue Diagnosis`) ~ "NA",
`Dengue Diagnosis` == 1 ~ "1",
`Dengue Diagnosis` == 0 ~ "0"
)) %>%
group_by(`Dengue Diagnosis`) %>%
summarise(Frecuencia = n()) %>%
mutate(Proporcion = Frecuencia / sum(Frecuencia))
# Gráfico
ggplot(data_plot, aes(x = `Dengue Diagnosis`, y = Proporcion, fill = `Dengue Diagnosis`)) +
geom_col() +
geom_text(aes(label = paste0(Frecuencia, " obs")), vjust = -0.5) +
scale_y_continuous(labels = scales::percent_format(), limits = c(0, 1.1)) +
labs(
x = "Valor de Dengue Diagnosis",
y = "Proporción del total",
title = "Distribución de Dengue Diagnosis",
fill = "Valor"
) +
scale_fill_manual(values = c("0" = "gray70", "1" = "steelblue", "NA" = "darkred")) +
theme_minimal()
library(readr)
library(dplyr)
library(ggplot2)
library(ggcorrplot)
data_raw <- read_csv("Dengue diseases dataset.csv", show_col_types = FALSE)
#Creación de copia del df original (crudo)
data_clean <- data_raw
names(data_clean)[9] <- "Dengue Diagnosis"
#View(data_clean)
#Hacer varibla que determina el dengue booleana
data_clean$`Dengue Diagnosis` <- as.logical(data_clean$`Dengue Diagnosis`)
# Filtrar solo las variables numéricas
datos_numericos <- data_clean %>%
select(where(is.numeric)) %>%
na.omit()  # eliminar NA para evitar errores en cor()
# Calcular matriz de correlación
cor_matrix <- cor(datos_numericos)
# Visualizar la matriz con ggcorrplot
ggcorrplot(cor_matrix,
method = "square",
type = "lower",
lab = TRUE,
lab_size = 2.5,
colors = c("#6D9EC1", "white", "#E46726"),
title = "Matriz de correlación entre variables",
ggtheme = ggplot2::theme_minimal())
data_clean$`Dengue Diagnosis`
# Reemplazar NA por etiqueta explícita
data_plot <- data_clean %>%
mutate(`Dengue Diagnosis` = case_when(
is.na(`Dengue Diagnosis`) ~ "NA",
`Dengue Diagnosis` == 1 ~ "1",
`Dengue Diagnosis` == 0 ~ "0"
)) %>%
group_by(`Dengue Diagnosis`) %>%
summarise(Frecuencia = n()) %>%
mutate(Proporcion = Frecuencia / sum(Frecuencia))
# Gráfico
ggplot(data_plot, aes(x = `Dengue Diagnosis`, y = Proporcion, fill = `Dengue Diagnosis`)) +
geom_col() +
geom_text(aes(label = paste0(Frecuencia, " obs")), vjust = -0.5) +
scale_y_continuous(labels = scales::percent_format(), limits = c(0, 1.1)) +
labs(
x = "Valor de Dengue Diagnosis",
y = "Proporción del total",
title = "Distribución de Dengue Diagnosis",
fill = "Valor"
) +
scale_fill_manual(values = c("0" = "gray70", "1" = "steelblue", "NA" = "darkred")) +
theme_minimal()
# Preparar los datos
data_plot <- data_clean %>%
filter(!is.na(`Dengue Diagnosis`)) %>%
mutate(
`Differential Count` = factor(`Differential Count`, levels = c(0, 1)),
`Dengue Diagnosis` = ifelse(`Dengue Diagnosis` == 1, "Positive", "Negative")
)
# Gráfico
ggplot(data_plot, aes(x = `Differential Count`, fill = `Differential Count`)) +
geom_bar() +
facet_wrap(~`Dengue Diagnosis`) +
labs(
title = "Distribución de Differential Count según diagnóstico de dengue",
x = "Differential Count",
y = "Frecuencia"
) +
scale_fill_manual(values = c("0" = "gray70", "1" = "steelblue")) +
theme_minimal()
library(ggplot2)
library(dplyr)
# Preparar los datos
data_plot <- data_clean %>%
filter(!is.na(`RBC PANEL`)) %>%
mutate(
`RBC PANEL` = factor(`RBC PANEL`, levels = c(0, 1)),
`Dengue Diagnosis` = ifelse(`Dengue Diagnosis` == 1, "Positive", "Negative")
)
# Gráfico
ggplot(data_plot, aes(x = `RBC PANEL`, fill = `RBC PANEL`)) +
geom_bar() +
facet_wrap(~`Dengue Diagnosis`) +
labs(
title = "Distribución de RBC PANEL según diagnóstico de dengue",
x = "RBC PANEL",
y = "Frecuencia"
) +
scale_fill_manual(values = c("0" = "gray70", "1" = "steelblue")) +
theme_minimal()
# Calcular resumen estadístico por grupo de diagnóstico
tabla_resumen <- data_clean %>%
group_by(`Dengue Diagnosis`) %>%
summarise(
Haemoglobin_mean = round(mean(Haemoglobin, na.rm = TRUE), 2),
Haemoglobin_sd = round(sd(Haemoglobin, na.rm = TRUE), 2),
Haemoglobin_median = round(median(Haemoglobin, na.rm = TRUE), 2)
)
# Mostrar tabla
print(tabla_resumen)
tabla_resumen <- data_clean %>%
group_by(`Dengue Diagnosis`) %>%
summarise(
WBC_Count_mean = round(mean(`WBC Count`, na.rm = TRUE), 2),
WBC_Count_sd = round(sd(`WBC Count`, na.rm = TRUE), 2),
WBC_Count_median = round(median(`WBC Count`, na.rm = TRUE), 2)
)
# Mostrar tabla
print(tabla_resumen)
tabla_resumen <- data_clean %>%
group_by(`Dengue Diagnosis`) %>%
summarise(
Platelet_Count_mean = round(mean(`Platelet Count`, na.rm = TRUE), 2),
Platelet_Count_sd = round(sd(`Platelet Count`, na.rm = TRUE), 2),
Platelet_Count_median = round(median(`Platelet Count`, na.rm = TRUE), 2)
)
# Mostrar tabla
print(tabla_resumen)
tabla_resumen <- data_clean %>%
group_by(`Dengue Diagnosis`) %>%
summarise(
PDW_mean = round(mean(PDW, na.rm = TRUE), 2),
PDW_sd = round(sd(PDW, na.rm = TRUE), 2),
PDW_median = round(median(PDW, na.rm = TRUE), 2)
)
# Mostrar tabla
print(tabla_resumen)
# Boxplot Haemoglobin
p1 <- ggplot(data_clean, aes(x = factor(`Dengue Diagnosis`), y = Haemoglobin)) +
geom_boxplot(fill = "#69b3a2") +
labs(title = "Haemoglobina por diagnóstico", x = "Diagnóstico de dengue", y = "g/dL") +
theme_minimal()
# Boxplot WBC Count
p2 <- ggplot(data_clean, aes(x = factor(`Dengue Diagnosis`), y = `WBC Count`)) +
geom_boxplot(fill = "#f9a825") +
labs(title = "Recuento de glóbulos blancos", x = "Diagnóstico de dengue", y = "células/µL") +
theme_minimal()
# Boxplot Platelet Count
p3 <- ggplot(data_clean, aes(x = factor(`Dengue Diagnosis`), y = `Platelet Count`)) +
geom_boxplot(fill = "#ef5350") +
labs(title = "Recuento de plaquetas", x = "Diagnóstico de dengue", y = "células/µL") +
theme_minimal()
# Boxplot PDW
p4 <- ggplot(data_clean, aes(x = factor(`Dengue Diagnosis`), y = PDW)) +
geom_boxplot(fill = "#B2FFFF") +
labs(title = "Amplitud de Distribución Plaquetaria", x = "Diagnóstico de dengue", y = "% de variabilidad en tamaño") +
theme_minimal()
# Mostrar juntos (si usás patchwork o gridExtra)
library(patchwork)
p1 + p2
p3 + p4
data_clean$`Dengue Diagnosis`
# Reemplazar NA por etiqueta explícita
data_plot <- data_clean %>%
mutate(`Dengue Diagnosis` = case_when(
is.na(`Dengue Diagnosis`) ~ "NA",
`Dengue Diagnosis` == 1 ~ "1",
`Dengue Diagnosis` == 0 ~ "0"
)) %>%
group_by(`Dengue Diagnosis`) %>%
summarise(Frecuencia = n()) %>%
mutate(Proporcion = Frecuencia / sum(Frecuencia))
# Gráfico
ggplot(data_plot, aes(x = `Dengue Diagnosis`, y = Proporcion, fill = `Dengue Diagnosis`)) +
geom_col() +
geom_text(aes(label = paste0(Frecuencia, " obs")), vjust = -0.5) +
scale_y_continuous(labels = scales::percent_format(), limits = c(0, 1.1)) +
labs(
x = "Valor de Dengue Diagnosis",
y = "Proporción del total",
title = "Distribución de Dengue Diagnosis",
fill = "Valor"
) +
scale_fill_manual(values = c("0" = "gray70", "1" = "steelblue", "NA" = "darkred")) +
theme_minimal()
knit_with_parameters("C:/Users/AMADOR/OneDrive - Universidad de Costa Rica/I-2025/Modelos lineales y de sobrevivencia/Proyecto Modelos/Análisis_exploratorio_2.Rmd")
